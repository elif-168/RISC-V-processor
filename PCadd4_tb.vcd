$date
	Sun Jan 05 19:09:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module PC_add4_tb $end
$var wire 32 ! pc_out [31:0] $end
$var reg 32 " pc_in [31:0] $end
$scope module myDut $end
$var wire 32 # pc [31:0] $end
$var wire 32 $ plus4 [31:0] $end
$var wire 32 % next_pc [31:0] $end
$var wire 1 & carry_out $end
$scope module adder $end
$var wire 32 ' a [31:0] $end
$var wire 32 ( b [31:0] $end
$var wire 1 ) cin $end
$var wire 32 * sum [31:0] $end
$var wire 1 & cout $end
$var wire 32 + carry [31:0] $end
$scope begin full_adder_gen[0] $end
$scope begin genblk2 $end
$scope module fa $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 ) cin $end
$var wire 1 . cout $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[1] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[2] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[3] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[4] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A cin $end
$var wire 1 B cout $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[5] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F cin $end
$var wire 1 G cout $end
$var wire 1 H sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[6] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K cin $end
$var wire 1 L cout $end
$var wire 1 M sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[7] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P cin $end
$var wire 1 Q cout $end
$var wire 1 R sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[8] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U cin $end
$var wire 1 V cout $end
$var wire 1 W sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[9] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z cin $end
$var wire 1 [ cout $end
$var wire 1 \ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[10] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ cin $end
$var wire 1 ` cout $end
$var wire 1 a sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[11] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d cin $end
$var wire 1 e cout $end
$var wire 1 f sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[12] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 i cin $end
$var wire 1 j cout $end
$var wire 1 k sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[13] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n cin $end
$var wire 1 o cout $end
$var wire 1 p sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[14] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 s cin $end
$var wire 1 t cout $end
$var wire 1 u sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[15] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 v a $end
$var wire 1 w b $end
$var wire 1 x cin $end
$var wire 1 y cout $end
$var wire 1 z sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[16] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } cin $end
$var wire 1 ~ cout $end
$var wire 1 !" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[17] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 $" cin $end
$var wire 1 %" cout $end
$var wire 1 &" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[18] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 '" a $end
$var wire 1 (" b $end
$var wire 1 )" cin $end
$var wire 1 *" cout $end
$var wire 1 +" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[19] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." cin $end
$var wire 1 /" cout $end
$var wire 1 0" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[20] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 1" a $end
$var wire 1 2" b $end
$var wire 1 3" cin $end
$var wire 1 4" cout $end
$var wire 1 5" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[21] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 8" cin $end
$var wire 1 9" cout $end
$var wire 1 :" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[22] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ;" a $end
$var wire 1 <" b $end
$var wire 1 =" cin $end
$var wire 1 >" cout $end
$var wire 1 ?" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[23] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" cin $end
$var wire 1 C" cout $end
$var wire 1 D" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[24] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 G" cin $end
$var wire 1 H" cout $end
$var wire 1 I" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[25] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 L" cin $end
$var wire 1 M" cout $end
$var wire 1 N" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[26] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 O" a $end
$var wire 1 P" b $end
$var wire 1 Q" cin $end
$var wire 1 R" cout $end
$var wire 1 S" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[27] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" cin $end
$var wire 1 W" cout $end
$var wire 1 X" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[28] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Y" a $end
$var wire 1 Z" b $end
$var wire 1 [" cin $end
$var wire 1 \" cout $end
$var wire 1 ]" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[29] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ^" a $end
$var wire 1 _" b $end
$var wire 1 `" cin $end
$var wire 1 a" cout $end
$var wire 1 b" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[30] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 c" a $end
$var wire 1 d" b $end
$var wire 1 e" cin $end
$var wire 1 f" cout $end
$var wire 1 g" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_gen[31] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 h" a $end
$var wire 1 i" b $end
$var wire 1 j" cin $end
$var wire 1 k" cout $end
$var wire 1 l" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
19
08
07
16
05
04
03
02
01
00
0/
0.
0-
0,
b0 +
b100 *
0)
b100 (
b0 '
0&
b100 %
b100 $
b0 #
b0 "
b100 !
$end
#10
b101 !
b101 %
b101 *
1/
1,
b1 "
b1 #
b1 '
#20
